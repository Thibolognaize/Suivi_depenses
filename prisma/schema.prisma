generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL_DEV")
}

model categorie {
  id       Int        @id @default(autoincrement())
  nom      String     @unique(map: "Categorie_nom_key")
  commande commande[]
}

model entite {
  id       Int        @id @default(autoincrement())
  nom      String     @unique(map: "Entite_nom_key")
  commande commande[]
  user     user[]
}

model fournisseur {
  id       Int        @id @default(autoincrement())
  nom      String     @unique(map: "Fournisseur_nom_key")
  commande commande[]
}

model user {
  id                  Int          @id @default(autoincrement())
  nom                 String
  prenom              String
  email               String       @unique
  role                user_role    @default(utilisateur)
  entiteId            Int
  isActive            Boolean      @default(true)
  date_creation       DateTime     @default(now())
  derniere_connexion  DateTime?
  commandes_initiees  commande[]   @relation("commande_initiateurIdTouser")
  commandes_utilisees commande[]   @relation("commande_utilisateurIdTouser")
  entite              entite       @relation(fields: [entiteId], references: [id], onDelete: Cascade)
  validations         validation[]

  @@index([entiteId], map: "User_entiteId_fkey")
}

model commande {
  id                                Int           @id @default(autoincrement())
  libelle                           String
  quantite                          Int
  montant                           Decimal       @db.Decimal(10, 2)
  ref_facture                       String?       @unique
  commentaire                       String?
  date_creation                     DateTime      @default(now())
  date_modification                 DateTime      @default(now()) @updatedAt
  entiteId                          Int
  fournisseurId                     Int
  initiateurId                      Int
  utilisateurId                     Int
  categorieId                       Int
  etat                              commande_etat @default(commande)
  categorie                         categorie     @relation(fields: [categorieId], references: [id], onDelete: Cascade)
  entite                            entite        @relation(fields: [entiteId], references: [id], onDelete: Cascade)
  fournisseur                       fournisseur   @relation(fields: [fournisseurId], references: [id], onDelete: Cascade)
  user_commande_initiateurIdToUser  user          @relation("commande_initiateurIdTouser", fields: [initiateurId], references: [id], onDelete: Cascade)
  user_commande_utilisateurIdToUser user          @relation("commande_utilisateurIdTouser", fields: [utilisateurId], references: [id], onDelete: Cascade)
  validation                        validation?

  @@index([categorieId])
  @@index([entiteId])
  @@index([fournisseurId])
  @@index([initiateurId])
  @@index([utilisateurId])
}

model validation {
  id              Int               @id @default(autoincrement())
  commandeId      Int               @unique
  statut          validation_statut
  date_validation DateTime
  validateur_id   Int
  commentaire     String?
  commande        commande          @relation(fields: [commandeId], references: [id], onDelete: Cascade)
  validateur      user              @relation(fields: [validateur_id], references: [id], onDelete: Cascade)

  @@index([validateur_id])
}

enum user_role {
  admin
  associe
  utilisateur
}

enum commande_etat {
  commande
  expedie
  recu
  retourne
}

enum validation_statut {
  en_attente
  approuve
  refuse
}
